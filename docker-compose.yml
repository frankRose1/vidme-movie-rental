version: "3.4"

services:
  postgres:
    env_file:
      - ".env"
    image: "postgres:11.5-alpine"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    ports:
      - "${DOCKER_POSTGRES_PORT:-127.0.0.1:5432}:5432"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      - "postgres:/var/lib/postgresql/data"

  redis:
    env_file:
      - ".env"
    image: "redis:5.0.5-buster"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      - "redis:/data"

  web:
    build:
      context: "."
      args:
        - "FLASK_ENV=${FLASK_ENV:-production}"
    depends_on:
      - "postgres"
      - "redis"
    env_file:
      - ".env"
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8000/healthy}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT:-127.0.0.1:8000}:8000"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      - "${DOCKER_WEB_VOLUME:-./public:/app/public}"

  worker:
    build:
      context: "."
      args:
        - "FLASK_ENV=${FLASK_ENV:-production}"
    command: celery worker -B -l info -A vidme.blueprints.billing.tasks
    depends_on:
      - "postgres"
      - "redis"
    env_file:
      - ".env"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      - "${DOCKER_WEB_VOLUME:-./public:/app/public}"

version: '3.4'

services:
  redis:
    image: 'redis:5.0.5-buster'
    command: 'redis-server --requirepass devpassword'
    volumes:
      - 'redis:/data'
    ports:
      - '6379:6379'

  postgres:
    image: 'postgres:11.5-alpine'
    env_file:
      - '.env'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - '5432:5432'

  web:
    build: .
    command: >
      gunicorn -b 0.0.0.0:8000
        --access-logfile -
        --reload
        "vidme.app:create_app()"
    depends_on:
      - 'postgres'
    env_file:
      - '.env'
    ports:
      - '8000:8000'
    volumes:
      - '.:/app'

  celery:
    build: .
    command: 'celery worker -B -l info -A vidme.blueprints.admin.tasks'
    env_file:
      - '.env'
    volumes:
      - '.:/app'

volumes:
  redis: {}
  postgres: {}
